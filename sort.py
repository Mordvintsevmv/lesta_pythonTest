# coding=utf-8
import random

"""

Метод быстрой сортировки рекурсивно основан на рекурсивном вызове функции сортировки.

В начале выбирается случайное число из массива. Далее все значения массива делятся на 3 массива:

1. Числа, меньше выбранного
2. Числа, равные выбранному
3. Числа, больше выбранного

Далее для каждого массива снова вызывается функция сортировки, где все действия повторяются.

В итоге полученные массивы склеиваются в нужном порядке.

"""

def quicksort(arr):
    if len(arr) > 1:
        num = random.choice(arr)

        less_arr = []
        equal_arr = []
        more_arr = []

        for i in arr:
            if i < num:
                less_arr.append(i)
            elif i > num:
                more_arr.append(i)
            else:
                equal_arr.append(i)
        return quicksort(less_arr) + equal_arr + quicksort(more_arr)
    else:
        return arr


"""

Метод сортировки подсчётом основан на подсчёте количества вхождений каждого числа.

В начале выбирается максимальное число и создаётся массив его размера + 1 (с учётом нулей).

Далее необходимо пройти весь массив и подсчитать количество вхождений.

По моим личным измерениям данный метод работает гораздо эффективнее, чем быстрый метод сортировки, если в массиве 
содержатся числа не более ~60000 

"""


def countingsort(arr):

    max_num = max(arr)

    count_arr = [0]*(max_num+1)

    for i in arr:
        count_arr[i] += 1

    sorted_arr = []

    for i in range(len(count_arr)):
        sorted_arr += [i]*count_arr[i]

    return sorted_arr


